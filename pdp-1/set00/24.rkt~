;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname |24|) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ())))
;; list-length : List -> Number
;; Returns the length of the given list
;; Examples: 
;; (list-length empty) = 0
;; (list-length (list 1)) = 1
;; (list-length (list 1 2 3 4) = 4
(define (list-length lst)
  (cond
    [(empty? lst) 0]
    [else (+ 1 (list-length (rest lst)))]))


;; product : List -> Number
;; Returns the product of the numbers in the given list
;; Examples: 
;; (product empty) = 0
;; (product (list 1)) = 1
;; (product (list 1 2 3 4) = 24
(define (product lst)
  (cond
    [(= (list-length lst) 0) 1]
    [else (* (first lst) (product (rest lst)))]))

(check-expect (product (list 1 2 3 4)) 24)
(check-expect (product (list 1)) 1)